<!DOCTYPE>
<html>
    <head>
        <title>Realtime Analytics</title>
        <link rel="stylesheet" href="https://unpkg.com/purecss@0.6.2/build/pure-min.css" integrity="sha384-UQiGfs9ICog+LwheBSRCt1o5cbyKIHbwjWscjemyBMT9YCUMZffs6UqUTd0hObXD" crossorigin="anonymous">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway:200">
        <link rel="stylesheet" href="../css/style.css">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    <body>
        <section>
          <div id="loader" class="loader">
           Loading...
          </div>
          <canvas id="weatherChart">
          </canvas>
       </section>
       <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.bundle.min.js"></script>
       <script src="https://js.pusher.com/4.0/pusher.min.js"></script>
       <script>
         // Using IIFE for Implementing Module Pattern to keep the Local Space for the JS Variables
          (function() {
              // Enable pusher logging - don't include this in production
              Pusher.logToConsole = true;

              var serverUrl = "/",
                  members = [],
                  pusher = new Pusher('pusherKey', {
                    encrypted: true
                  }),
                  channel,weatherChartRef;

              function showEle(elementId){
                document.getElementById(elementId).style.display = 'flex';
              }

              function hideEle(elementId){
                document.getElementById(elementId).style.display = 'none';
              }

              function ajax(url, method, payload, successCallback){
                var xhr = new XMLHttpRequest();
                xhr.open(method, url, true);
                xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
                xhr.onreadystatechange = function () {
                  if (xhr.readyState != 4 || xhr.status != 200) return;
                  successCallback(xhr.responseText);
                };
                xhr.send(JSON.stringify(payload));
              }

          })();

          function renderWeatherChart(weatherData) {
                var ctx = document.getElementById("weatherChart").getContext("2d");
                var options = { };
                weatherChartRef = new Chart(ctx, {
                  type: "line",
                  data: weatherData,
                  options: options
                });
            }

            var chartConfig = {
                labels: [],
                datasets: [
                  {
                      label: "London Weather",
                      fill: false,
                      lineTension: 0.1,
                      backgroundColor: "rgba(75,192,192,0.4)",
                      borderColor: "rgba(75,192,192,1)",
                      borderCapStyle: 'butt',
                      borderDash: [],
                      borderDashOffset: 0.0,
                      borderJoinStyle: 'miter',
                      pointBorderColor: "rgba(75,192,192,1)",
                      pointBackgroundColor: "#fff",
                      pointBorderWidth: 1,
                      pointHoverRadius: 5,
                      pointHoverBackgroundColor: "rgba(75,192,192,1)",
                      pointHoverBorderColor: "rgba(220,220,220,1)",
                      pointHoverBorderWidth: 2,
                      pointRadius: 1,
                      pointHitRadius: 10,
                      data: [],
                      spanGaps: false,
                  }
                ]
            };

            ajax("/getTemperature", "GET",{}, onFetchTempSuccess);

            function onFetchTempSuccess(response){
                hideEle("loader");
                var respData = JSON.parse(response);
                chartConfig.labels = respData.dataPoints.map(dataPoint => dataPoint.time);
                chartConfig.datasets[0].data = respData.dataPoints.map(dataPoint => dataPoint.temperature);
                renderWeatherChart(chartConfig)
            }
       </script>
    </body>
</html>
